version: '3.7'

services:
  printscript-ui:
    container_name: 'printscript-ui'
    image: 'ghcr.io/ingsis-team/ingsis-printscript-ui:latest'
    pull_policy: always
    expose:
      - "80"

  snippet-api:
    container_name: 'snippet-api'
    image: 'ghcr.io/ingsis-team/ingsis-snippet-service:latest'
    pull_policy: always
    expose:
      - "8089"
    depends_on:
      - snippet-db
    environment:
      DB_HOST: snippet-db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      PERMISSION_URL: ${PERMISSION_URL}
      ASSET_URL: ${ASSET_URL}
      PRINTSCRIPT_URL: ${PRINTSCRIPT_URL}
      AUTH0_SERVER_URI: ${AUTH0_SERVER_URI}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}

  snippet-db:
    container_name: 'snippet-db'
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - snippet_volume:/var/lib/postgresql/data

  printscript-db:
    container_name: 'printscript-db'
    image: postgres:12
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  redis:
    container_name: 'redis'
    image: redis:6-alpine

  permission-api:
    container_name: 'permission-api'
    image: 'ghcr.io/ingsis-team/ingsis-permission-service:latest'
    pull_policy: always
    expose:
      - "8082"
    depends_on:
      - permission-db
    environment:
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_HOST: permission-db
      DB_PORT: 5432


  permission-db:
    container_name: 'permission-db'
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}


  proxy:
    container_name: 'reverse-proxy-dev'
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./conf.d/:/etc/nginx/conf.d/:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - duckdns
      - printscript-ui
      - snippet-api
      - printscript-db
      - permission-db
      - snippet-db

  duckdns:
    image: lscr.io/linuxserver/duckdns:version-d63af1c1
    container_name: duckdns
    environment:
      - SUBDOMAINS=ingsis
      - TOKEN=${DUCKDNS_TOKEN}
    restart: unless-stopped

  api-manager:
    container_name: "asset-service"
    image: "ghcr.io/austral-ingsis/snippet-asset-service:latest"
    environment:
      AZURE_HOST: "http://azurite"

  azurite-manager:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    hostname: azurite
    restart: always
    ports:
      - "10003:10000"  # Changed port
      - "10004:10001"  # Changed port
      - "10005:10002"  # Changed port
    volumes:
      - blob:/workspace

volumes:
  snippet_volume:
  permission_volume:
  printsript_volume:
  blob:
